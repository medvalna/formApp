// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url = env("DATABASE_URL")
}

model Users {
userId String @id @default(uuid())
email String @unique
password String
forms Form[]
salt String
responses Answers[]
}

model Form {
formId String @id @default(uuid())
title String
isAnonymous Boolean
creator Users @relation(fields: [creatorId], references: [userId])
creatorId String
isPublished Boolean
questions Questions[]
formAnswers Answers[]
}

model Questions {
questionId String @id @default(uuid())
title String
type Type
isRequired Boolean
options Options[]
relatedForm Form @relation(fields: [relatedFormId], references: formId)
relatedFormId String
}

enum Type {
ONECHOICE
MULTICHOICE
INPUT
}

model Options {
optionId String @id @default(uuid())
text String
relatedQuestion Questions @relation(fields: [relatedQuestionId], references: [questionId])
relatedQuestionId String
}

model Answers {
    answerId String @id @default(uuid())
    connectedForm Form @relation(fields: [connectedFormId], references: [formId])
    connectedFormId String
    questionIds String[]
    choicesIds String[]
    responder Users?  @relation(fields: [responderId], references: [userId])
    responderId String?
}